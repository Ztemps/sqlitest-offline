{"version":3,"sources":["../../src/pages/home/home.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/tasks.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, AlertController } from 'ionic-angular';\n\nimport { TasksService } from '../../providers/tasks.service';\n\n@IonicPage()\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  // public properties\n\n  public taskList: any;\n  public rowsInDb: any;\n  // private fields \n\n  constructor(\n    public alertCtrl: AlertController,\n    public navCtrl: NavController,\n    public tasksService: TasksService,\n  ) { }\n\n  // Ionic's or Angular's triggers\n\n  public testConnection() {\n\n    console.log('WORKS');\n    if (this.tasksService.iAmConnected()) {\n      console.log('AVAILABLE FOR SEND QUERY');\n\n    } else {\n      console.log('NOT AVAILABLE FOR SEND QUERY');\n\n    }\n\n  }\n  ionViewDidLoad() {\n  }\n\n  // public methods\n\n  deleteTask(task: any, index) {\n    this.tasksService.delete(task)\n      .then(response => {\n        console.log(response);\n        this.taskList.splice(index, 1);\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n\n  getAllTasks() {\n    this.tasksService.getAll()\n      .then(tasks => {\n        console.log(tasks);\n        this.taskList = tasks;\n        if (this.taskList.rows.length > 0) {\n          this.rowsInDb = [];\n          for (let i = 0; i < this.taskList.rows.length; i++) {\n            console.log('ITEM: ', this.taskList.rows.item(i));\n            this.rowsInDb.push({\n              \"id\": this.taskList.rows.item(i).id,\n              \"url\": this.taskList.rows.item(i).url,\n              \"sync\": this.taskList.rows.item(i).sync,\n              \"params\": this.taskList.rows.item(i).params,\n              \"date\": this.taskList.rows.item(i).date,\n              \"type\": this.taskList.rows.item(i).type\n            });\n          }\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      })\n      \n  }\n\n  updateTaskById() {\n\n    let task = {\n      sync : true,\n      id: 3\n    }\n    // task.completed = !task.completed;\n    this.tasksService.updateTask(task.sync, task.id)\n      .then(response => {\n           this.taskList[task.id] = task;\n        // this.taskList[index] = task;\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n\n  insertSQL() {\n\n    let queryUrl = 'http://www.google.es';\n    let dataJson = { content: 'Insert Json Here' };\n    let isSync = false;\n    let parameters = 'Subí y bajá';\n    let inDate = new Date();\n    let queryType = 'GET';\n\n    let data: any =\n      {\n        url: queryUrl,\n        data: JSON.stringify(dataJson),\n        sync: isSync,\n        params: parameters,\n        date: inDate,\n        type: queryType\n      }\n\n    this.tasksService.create(data)\n      .then(response => {\n        this.taskList.unshift(data);\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 113;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 113\n// module chunks = 1","var map = {\n\t\"../pages/home/home.module\": [\n\t\t271,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 156\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { TasksService } from '../providers/tasks.service';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { Network } from '@ionic-native/network';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n    \n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    Network,\n    StatusBar,\n    SplashScreen,\n    SQLite,\n    TasksService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { SQLite } from '@ionic-native/sqlite';\n\nimport { TasksService } from '../providers/tasks.service';\nimport { HomePage } from '../pages/home/home';\n\n@Component({\n  template: `<ion-nav [root]=\"rootPage\"></ion-nav>`\n})\nexport class MyApp {\n  rootPage: any = HomePage;\n\n  constructor(\n    public platform: Platform,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    public tasksService: TasksService,\n    public sqlite: SQLite\n  ) {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.createDatabase();\n      this.tasksService.init();\n    });\n  }\n\n  private createDatabase(){\n    this.sqlite.create({\n      name: 'data.db',\n      location: 'default' // the location field is required\n    })\n    .then((db) => {\n      this.tasksService.setDatabase(db);\n      return this.tasksService.createTable();\n    })\n    .then(() =>{\n      this.splashScreen.hide();\n      this.rootPage = 'HomePage';\n    })\n    .catch(error =>{\n      console.error(error);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport { Observable } from 'rxjs/Observable';\nimport { Network } from '@ionic-native/network';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class TasksService {\n\n  // public properties\n\n  public connected = true;\n  public onDisconnect: Observable<any>;\n  public onConnect: Observable<any>;\n  public db: SQLiteObject = null;\n\n  constructor(public http: HttpClient,\n    public network: Network) {\n    console.log('TASKS SERVICES LOADED');\n  }\n  // public methods\n  public init() {\n    this.onDisconnect = this.network.onDisconnect();\n    this.onDisconnect.subscribe(() => {\n      console.log('network was disconnected :-(');\n      this.connected = false;\n    });\n    this.onConnect = this.network.onConnect();\n    this.network.onConnect().subscribe(() => {\n      console.log('network connected!');\n      this.connected = true;\n\n      // STEPS TODO HERE\n      // Get all the rows with sync = false (boolean) //Done\n      // then send it to the server\n    \n      // Check and control the if the response from the sql server was true\n      // if true then\n      // was correctly saved from the server\n      // else \n      // try to send it again\n\n      this.getAllSync().then((unsyncList: any) => {\n        console.log('BEFORE FOR: ', unsyncList.rows.item(0));\n        console.log('BEFORE FOR: ', unsyncList.rows.item(1));\n        console.log('BEFORE FOR: ', unsyncList.rows.item(2));\n        console.log('BEFORE FOR: ', unsyncList.rows.item(3));\n\n        let tasks = [];\n        for (let i = 0; i < unsyncList.rows.length; i++) {\n          console.log('UNSYNCLIST IN FOR: ', unsyncList.rows.item());\n\n          tasks.push(unsyncList.rows.item(i));\n        }\n        // SEND QUERY HERE FOR ALL THE ROW'S THAT HAVE sync in false\n        // unsyncList contains all the rows with sync = false\n\n        //HTTP QUERY GOES HERE!\n       /*  this.http.post('https://dondevayaesto.domain',\n        {\n          cardToken: token,\n          amount, 500\n        },\n        {\n          headers: { 'Content-Type': 'application/json' }\n        })\n        .then(data => {\n          console.log(data.data);\n        }).catch(error => {\n          console.log(error.status);\n        }); */\n        //Then if the http query is succesfuly, update the sync in the db\n        // this.updateTask(unsyncList.findIndex());\n\n      })\n        .catch(error => Promise.reject(error));\n\n      // We just got a connection but we need to wait briefly\n      // before we determine the connection type. Might need to wait.\n      // prior to doing any api requests as well.\n      setTimeout(() => {\n        if (this.network.type === 'wifi') {\n          console.log('we got a wifi connection, woohoo!');\n        }\n      }, 3000);\n    });\n  }\n\n  public iAmConnected() {\n\n    return this.connected;\n\n  }\n  setDatabase(db: SQLiteObject) {\n    if (this.db === null) {\n      this.db = db;\n    }\n  }\n\n  create(task: any) {\n    // console.log('TASKS CONTENT', task.toString());\n\n    let sql = 'INSERT INTO tasks(url, data, sync, params, date, type) VALUES(?,?,?,?,?,?)';\n    //console.log('SQL INSERT TASKS: ', sql.toString());\n    return this.db.executeSql(sql, [task.url, task.data, task.sync, task.params, task.date, task.type]);\n  }\n\n  createTable() {\n\n    let sql = 'CREATE TABLE IF NOT EXISTS tasks(id INTEGER PRIMARY KEY AUTOINCREMENT, url VARCHAR, data VARCHAR, sync bit, params VARCHAR, date date, type VARCHAR)';\n    return this.db.executeSql(sql, []);\n  }\n\n  delete(task: any) {\n    let sql = 'DELETE FROM tasks WHERE id=?';\n    return this.db.executeSql(sql, [task.id]);\n  }\n\n  getAll() {\n\n    let sql = \"SELECT * FROM tasks\";\n    return this.db.executeSql(sql, [])\n      .then(response => {\n        let tasks = [];\n        for (let index = 0; index < response.rows.length; index++) {\n          tasks.push(response.rows.item(index));\n        }\n        return Promise.resolve(tasks);\n      })\n      .catch(error => Promise.reject(error));\n  }\n\n  getAllSync() {\n\n    let syncState = false;\n    let sql = \"SELECT * FROM tasks WHERE sync = ?\";\n    return this.db.executeSql(sql, [syncState])\n      .then(response => {\n        let tasks = [];\n        for (let index = 0; index < response.rows.length; index++) {\n          tasks.push(response.rows.item(index));\n        }\n        return Promise.resolve(tasks);\n      })\n      .catch(error => Promise.reject(error));\n  }\n\n  updateTask(sync: any, task: any) {\n    let sql = 'UPDATE tasks SET sync = ? WHERE id = ?';\n    return this.db.executeSql(sql, [task.sync, task.id]);\n  }\n\n  // Idk if we recive any arrays but i created the method\n  parseObjectArraytoJSON(array) {\n    var jsonArray = [];\n    for (var i = 0; i < array.length; ++i) {\n      jsonArray.push(array[i].toJSON());\n    }\n    return jsonArray;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tasks.service.ts"],"sourceRoot":""}