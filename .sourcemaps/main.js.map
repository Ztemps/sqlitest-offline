{"version":3,"sources":["../../src/pages/home/home.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/tasks.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, AlertController } from 'ionic-angular';\n\nimport { TasksService } from '../../providers/tasks.service';\n\n@IonicPage()\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  // public properties\n\n  tasks: any[] = [];\n\n  // private fields \n\n  constructor(\n    public alertCtrl: AlertController,\n    public navCtrl: NavController,\n    public tasksService: TasksService\n  ) {}\n\n  // Ionic's or Angular's triggers\n\n  public testConnection() {\n\n    console.log('WORKS');\n    if (this.tasksService.iAmConnected()) {\n        console.log('AVAILABLE FOR SEND QUERY');\n\n    } else {\n        console.log('NOT AVAILABLE FOR SEND QUERY');\n\n    }\n\n}\n  ionViewDidLoad(){\n    this.tasksService.init();\n  }\n\n  // public methods\n\n  deleteTask(task: any, index){\n    this.tasksService.delete(task)\n    .then(response => {\n      console.log( response );\n      this.tasks.splice(index, 1);\n    })\n    .catch( error => {\n      console.error( error );\n    })\n  }\n\n  getAllTasks(){\n    this.tasksService.getAll()\n    .then(tasks => {\n      console.log(tasks);\n      this.tasks = tasks;\n    })\n    .catch( error => {\n      console.error( error );\n    })\n  }\n\n  updateTask(task, index){\n    task = Object.assign({}, task);\n    task.completed = !task.completed;\n    this.tasksService.update(task)\n    .then( response => {\n      this.tasks[index] = task;\n    })\n    .catch( error => {\n      console.error( error );\n    })\n  }\n\n  insertSQL(){\n\n    /* name: item.name + ' ' + item.lastName,\n    userId: item.objectId,\n    image: item.image ? item.image.url : '',\n    shortName: item.name,\n    itsNotMe: item.objectId !== this.currentuserId \n    url, data, sync, params, date\n    \n    */\n\n    let data: any = \n    {\n      url: 'http://chamomarica.com',\n      data: 'Insert Json Here',\n      sync: 'True',\n      params: 'Parap pa pa params (8)',\n      date: '2018-01-01'\n\n    }\n    \n    this.tasksService.create(data)\n            .then(response => {\n              this.tasks.unshift( data );\n            })\n            .catch( error => {\n              console.error( error );\n            })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 113;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 113\n// module chunks = 1","var map = {\n\t\"../pages/home/home.module\": [\n\t\t271,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 156\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { TasksService } from '../providers/tasks.service';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { Network } from '@ionic-native/network';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n    \n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    Network,\n    StatusBar,\n    SplashScreen,\n    SQLite,\n    TasksService,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { SQLite } from '@ionic-native/sqlite';\n\nimport { TasksService } from '../providers/tasks.service';\nimport { HomePage } from '../pages/home/home';\n\n@Component({\n  template: `<ion-nav [root]=\"rootPage\"></ion-nav>`\n})\nexport class MyApp {\n  rootPage: any = HomePage;\n\n  constructor(\n    public platform: Platform,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    public tasksService: TasksService,\n    public sqlite: SQLite\n  ) {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.createDatabase();\n    });\n  }\n\n  private createDatabase(){\n    this.sqlite.create({\n      name: 'data.db',\n      location: 'default' // the location field is required\n    })\n    .then((db) => {\n      this.tasksService.setDatabase(db);\n      return this.tasksService.createTable();\n    })\n    .then(() =>{\n      this.splashScreen.hide();\n      this.rootPage = 'HomePage';\n    })\n    .catch(error =>{\n      console.error(error);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport { Observable } from 'rxjs/Observable';\nimport { Network } from '@ionic-native/network';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class TasksService {\n\n  // public properties\n\n  public connected = true;\n  public onDisconnect: Observable<any>;\n  public onConnect: Observable<any>;\n  public db: SQLiteObject = null;\n\n  constructor(public http: HttpClient,\n    public network: Network) {\n    console.log('TASKS SERVICES LOADED');\n}\n  // public methods\n  public init() {\n    this.onDisconnect = this.network.onDisconnect();\n    this.onDisconnect.subscribe(() => {\n        console.log('network was disconnected :-(');\n        this.connected = false;\n    });\n    this.onConnect = this.network.onConnect();\n    this.network.onConnect().subscribe(() => {\n        console.log('network connected!');\n        this.connected = true;\n\n        this.getAll().then((unsyncList) =>{\n          console.log('UNSYNCLIST FROM DB: ',unsyncList);\n        })\n        .catch(error => Promise.reject(error));\n\n        // SEND QUERY HERE FOR ALL THE ROW'S THAT HAVE sync in false\n\n        \n        // We just got a connection but we need to wait briefly\n         // before we determine the connection type. Might need to wait.\n        // prior to doing any api requests as well.\n        setTimeout(() => {\n          if (this.network.type === 'wifi') {\n            console.log('we got a wifi connection, woohoo!');\n          }\n        }, 3000);\n    });\n}\n\npublic iAmConnected() {\n\n  return this.connected;\n\n}\n  setDatabase(db: SQLiteObject){\n    if(this.db === null){\n      this.db = db;\n    }\n  }\n\n  create(task: any){\n   // console.log('TASKS CONTENT', task.toString());\n    let sql = 'INSERT INTO tasks(url, data, sync, params, date) VALUES(?,?,?,?,?)';\n    //console.log('SQL INSERT TASKS: ', sql.toString());\n    return this.db.executeSql(sql, [task.url, task.data, task.sync, task.params, task.date]);\n  }\n\n  createTable(){\n\n    let sql = 'CREATE TABLE IF NOT EXISTS tasks(id INTEGER PRIMARY KEY AUTOINCREMENT, url VARCHAR, data VARCHAR, sync VARCHAR, params VARCHAR, date VARCHAR)';\n    return this.db.executeSql(sql, []);\n  }\n\n  delete(task: any){\n    let sql = 'DELETE FROM tasks WHERE id=?';\n    return this.db.executeSql(sql, [task.id]);\n  }\n\n  getAll(){\n    \n    let sql = \"SELECT * FROM tasks WHERE sync LIKE 'false' \";\n    return this.db.executeSql(sql, [])\n    .then(response => {\n      let tasks = [];\n      for (let index = 0; index < response.rows.length; index++) {\n        tasks.push( response.rows.item(index) );\n      }\n      return Promise.resolve( tasks );\n    })\n    .catch(error => Promise.reject(error));\n  }\n\n  update(task: any){\n    let sql = 'UPDATE tasks SET title=?, completed=? WHERE id=?';\n    return this.db.executeSql(sql, [task.title, task.completed, task.id]);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tasks.service.ts"],"sourceRoot":""}